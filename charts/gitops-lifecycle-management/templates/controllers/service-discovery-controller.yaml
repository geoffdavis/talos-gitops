{{- if .Values.serviceDiscovery.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gitops-lifecycle-management.fullname" . }}-service-discovery
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gitops-lifecycle-management.serviceDiscoveryLabels" . | nindent 4 }}
  annotations:
    {{- include "gitops-lifecycle-management.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.serviceDiscovery.controller.replicas }}
  selector:
    matchLabels:
      {{- include "gitops-lifecycle-management.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: service-discovery-controller
  template:
    metadata:
      labels:
        {{- include "gitops-lifecycle-management.serviceDiscoveryLabels" . | nindent 8 }}
      annotations:
        {{- include "gitops-lifecycle-management.annotations" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "gitops-lifecycle-management.serviceAccountName" . }}
      {{- include "gitops-lifecycle-management.controllerPodSecurityContext" . | nindent 6 }}
      containers:
        - name: controller
          image: "rancher/kubectl:v1.31.1"
          imagePullPolicy: {{ .Values.serviceDiscovery.controller.image.pullPolicy }}
          {{- include "gitops-lifecycle-management.controllerSecurityContext" . | nindent 10 }}
          env:
            - name: AUTHENTIK_HOST
              value: {{ .Values.global.authentikHost | quote }}
            - name: AUTHENTIK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.onePassword.secrets.authentikToken.targetSecret }}
                  key: {{ .Values.externalSecrets.onePassword.secrets.authentikToken.targetKey }}
            - name: EXTERNAL_OUTPOST_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.onePassword.secrets.authentikOutpost.targetSecret }}
                  key: outpost_id
            - name: AUTHORIZATION_FLOW
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.onePassword.secrets.authentikOutpost.targetSecret }}
                  key: authorization_flow
            - name: INVALIDATION_FLOW
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalSecrets.onePassword.secrets.authentikOutpost.targetSecret }}
                  key: invalidation_flow
            - name: COOKIE_DOMAIN
              value: {{ .Values.authentication.authentik.cookieDomain | quote }}
            - name: RECONCILE_INTERVAL
              value: {{ .Values.serviceDiscovery.discovery.reconcileInterval | quote }}
            - name: CLEANUP_ORPHANED
              value: {{ .Values.serviceDiscovery.discovery.cleanupOrphaned | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            - name: LOG_FORMAT
              value: {{ .Values.logging.format | quote }}
          ports:
            - name: metrics
              containerPort: {{ .Values.monitoring.metrics.port }}
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.serviceDiscovery.controller.resources | nindent 12 }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: controller-config
              mountPath: /etc/controller
              readOnly: true
            - name: controller-script
              mountPath: /app
              readOnly: true
          command:
            - /bin/sh
            - -c
            - |
              apk add --no-cache python3 py3-pip py3-requests &&
              python3 /app/controller.py
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: controller-config
          configMap:
            name: {{ include "gitops-lifecycle-management.fullname" . }}-controller-config
        - name: controller-script
          configMap:
            name: {{ include "gitops-lifecycle-management.fullname" . }}-service-discovery-script
            defaultMode: 0755
      {{- with .Values.serviceDiscovery.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.serviceDiscovery.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.serviceDiscovery.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
