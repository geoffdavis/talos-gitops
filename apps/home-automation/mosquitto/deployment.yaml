---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto
  namespace: home-automation
  labels:
    app.kubernetes.io/name: mosquitto
    app.kubernetes.io/component: mqtt-broker
    app.kubernetes.io/part-of: home-automation-stack
    app.kubernetes.io/version: "2.0.18"
spec:
  replicas: 1
  strategy:
    type: Recreate # Single replica with persistent storage
  selector:
    matchLabels:
      app.kubernetes.io/name: mosquitto
      app.kubernetes.io/component: mqtt-broker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mosquitto
        app.kubernetes.io/component: mqtt-broker
        app.kubernetes.io/part-of: home-automation-stack
        app.kubernetes.io/version: "2.0.18"
      annotations:
        # Force pod restart when config changes
        checksum/config: '{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}'
    spec:
      # Security context following cluster patterns
      securityContext:
        runAsUser: 1883
        runAsGroup: 1883
        fsGroup: 1883
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault

      # Node scheduling preferences
      nodeSelector:
        kubernetes.io/os: linux

      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"

      containers:
        - name: mosquitto
          image: eclipse-mosquitto:2.0.22
          imagePullPolicy: IfNotPresent

          # Container security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL

          # Resource limits appropriate for MQTT workload
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi

          # MQTT ports
          ports:
            - name: mqtt
              containerPort: 1883
              protocol: TCP
            - name: mqtt-tls
              containerPort: 8883
              protocol: TCP
            - name: websockets
              containerPort: 9001
              protocol: TCP

          # Environment variables for authentication
          env:
            - name: MQTT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mosquitto-credentials
                  key: username
            - name: MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mosquitto-credentials
                  key: password

          # Volume mounts
          volumeMounts:
            - name: mosquitto-config
              mountPath: /mosquitto/config/mosquitto.conf
              subPath: mosquitto.conf
              readOnly: true
            - name: mosquitto-data
              mountPath: /mosquitto/data
            - name: mosquitto-log
              mountPath: /mosquitto/log
            - name: mosquitto-passwd
              mountPath: /mosquitto/config/passwd
              subPath: passwd
              readOnly: true
            - name: tmp
              mountPath: /tmp

          # Health checks
          livenessProbe:
            tcpSocket:
              port: mqtt
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            tcpSocket:
              port: mqtt
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3

          startupProbe:
            tcpSocket:
              port: mqtt
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30

      # Init container to set up password file
      initContainers:
        - name: setup-passwd
          image: eclipse-mosquitto:2.0.22
          imagePullPolicy: IfNotPresent

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1883
            runAsGroup: 1883
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL

          command:
            - /bin/sh
            - -c
            - |
              echo "Setting up Mosquitto password file..."
              mosquitto_passwd -c -b /tmp/passwd "$MQTT_USERNAME" "$MQTT_PASSWORD"
              cp /tmp/passwd /mosquitto/config/passwd
              chmod 600 /mosquitto/config/passwd
              echo "Password file setup complete"

          env:
            - name: MQTT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mosquitto-credentials
                  key: username
            - name: MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mosquitto-credentials
                  key: password

          volumeMounts:
            - name: mosquitto-passwd
              mountPath: /mosquitto/config
            - name: tmp
              mountPath: /tmp

          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi

      volumes:
        - name: mosquitto-config
          configMap:
            name: mosquitto-config
            defaultMode: 0644
        - name: mosquitto-data
          persistentVolumeClaim:
            claimName: mosquitto-data
        - name: mosquitto-log
          emptyDir: {}
        - name: mosquitto-passwd
          emptyDir:
            sizeLimit: 1Mi
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
