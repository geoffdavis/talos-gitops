---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: home-assistant
  namespace: home-automation
  labels:
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/component: home-automation-core
    app.kubernetes.io/part-of: home-automation-stack
    app.kubernetes.io/version: "2025.7"
spec:
  replicas: 1
  strategy:
    type: Recreate # Single replica with persistent storage
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
      app.kubernetes.io/component: home-automation-core
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
        app.kubernetes.io/component: home-automation-core
        app.kubernetes.io/part-of: home-automation-stack
        app.kubernetes.io/version: "2025.7"
      annotations:
        # Force pod restart when config changes
        checksum/config: '{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}'
    spec:
      # Security context - Home Assistant needs root for s6-overlay init
      securityContext:
        fsGroup: 1000  # Keep fsGroup for volume permissions
        runAsNonRoot: false  # Allow root for s6-overlay init system
        seccompProfile:
          type: RuntimeDefault

      # Node scheduling preferences
      nodeSelector:
        kubernetes.io/os: linux

      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"

      containers:
        - name: home-assistant
          image: ghcr.io/home-assistant/home-assistant:2025.7
          imagePullPolicy: IfNotPresent

          # Container security context - Home Assistant needs root for s6-overlay
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false # Home Assistant needs to write to config
            runAsUser: 0  # Run as root for s6-overlay init system
            capabilities:
              drop:
                - ALL

          # Resource limits appropriate for Home Assistant workload
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi

          # Home Assistant web interface port
          ports:
            - name: http
              containerPort: 8123
              protocol: TCP

          # Environment variables for Home Assistant
          env:
            # Database configuration
            - name: POSTGRES_HOST
              value: "homeassistant-postgresql-rw.home-automation.svc.cluster.local"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "homeassistant"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: homeassistant-database-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: homeassistant-database-credentials
                  key: password
            - name: POSTGRES_DB_URL
              valueFrom:
                secretKeyRef:
                  name: home-assistant-secrets
                  key: postgres_db_url

            # MQTT configuration
            - name: MQTT_HOST
              value: "mosquitto.home-automation.svc.cluster.local"
            - name: MQTT_PORT
              value: "1883"
            - name: MQTT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: home-assistant-secrets
                  key: mqtt_username
            - name: MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: home-assistant-secrets
                  key: mqtt_password

            # Redis configuration
            - name: REDIS_HOST
              value: "redis.home-automation.svc.cluster.local"
            - name: REDIS_PORT
              value: "6379"

            # Home Assistant specific configuration
            - name: TZ
              value: "America/New_York"
            - name: HASS_HTTP_TRUSTED_PROXY_1
              value: "10.244.0.0/16" # Pod CIDR for Authentik proxy
            - name: HASS_HTTP_TRUSTED_PROXY_2
              value: "172.29.51.0/24" # Management network
            - name: HASS_HTTP_USE_X_FORWARDED_FOR
              value: "true"

          # Volume mounts
          volumeMounts:
            - name: home-assistant-config
              mountPath: /config
            - name: home-assistant-configuration
              mountPath: /config/configuration.yaml
              subPath: configuration.yaml
              readOnly: true
            - name: tmp
              mountPath: /tmp

          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30

      volumes:
        - name: home-assistant-config
          persistentVolumeClaim:
            claimName: home-assistant-config
        - name: home-assistant-configuration
          configMap:
            name: home-assistant-configuration
            defaultMode: 0644
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
