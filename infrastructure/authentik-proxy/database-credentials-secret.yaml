---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik-database-credentials
  namespace: authentik-proxy
  labels:
    app.kubernetes.io/component: external-outpost
    app.kubernetes.io/name: authentik-proxy
    app.kubernetes.io/part-of: identity-provider
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: authentik-database-credentials
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      type: Opaque
      engineVersion: v2
      mergePolicy: Replace
      metadata:
        labels:
          app.kubernetes.io/component: external-outpost
          app.kubernetes.io/name: authentik-proxy
      data:
        AUTHENTIK_POSTGRESQL__HOST: postgresql-cluster-rw.postgresql-system.svc.cluster.local
        AUTHENTIK_POSTGRESQL__NAME: authentik
        AUTHENTIK_POSTGRESQL__USER: '{{ .username }}'
        AUTHENTIK_POSTGRESQL__PASSWORD: '{{ .password }}' # pragma: allowlist secret
        AUTHENTIK_POSTGRESQL__PORT: "5432"
        AUTHENTIK_POSTGRESQL__SSLMODE: require
        AUTHENTIK_POSTGRESQL__USE_PGBOUNCER: "false"
  data:
    - secretKey: username # pragma: allowlist secret
      remoteRef:
        key: PostgreSQL Authentik User - home-ops
        property: username
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
    - secretKey: password # pragma: allowlist secret
      remoteRef:
        key: PostgreSQL Authentik User - home-ops
        property: password # pragma: allowlist secret
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
