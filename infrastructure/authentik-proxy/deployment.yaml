apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-proxy
  namespace: authentik-proxy
  labels:
    app.kubernetes.io/name: authentik-proxy
    app.kubernetes.io/part-of: identity-provider
    app.kubernetes.io/component: external-outpost
    app.kubernetes.io/version: "2024.8.3"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: authentik-proxy
      app.kubernetes.io/component: external-outpost
  template:
    metadata:
      labels:
        app.kubernetes.io/name: authentik-proxy
        app.kubernetes.io/part-of: identity-provider
        app.kubernetes.io/component: external-outpost
        app.kubernetes.io/version: "2024.8.3"
      annotations:
        # Force pod restart when config changes
        checksum/config: '{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}'
        checksum/secret: '{{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}'
    spec:
      serviceAccountName: authentik-proxy
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: authentik-proxy
          image: ghcr.io/goauthentik/proxy:2025.6.4
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          env:
            # Authentik connection configuration
            - name: AUTHENTIK_HOST
              valueFrom:
                secretKeyRef:
                  name: authentik-external-outpost-token
                  key: authentik_host
            - name: AUTHENTIK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: authentik-external-outpost-token
                  key: token
            - name: AUTHENTIK_INSECURE
              valueFrom:
                secretKeyRef:
                  name: authentik-external-outpost-token
                  key: authentik_insecure
            # External URL for browser redirects
            - name: AUTHENTIK_HOST_BROWSER
              value: "https://authentik.k8s.home.geoffdavis.com"
            # Proxy configuration
            - name: AUTHENTIK_LOG_LEVEL
              value: "info"
            - name: AUTHENTIK_ERROR_REPORTING__ENABLED
              value: "false"
            - name: AUTHENTIK_DISABLE_UPDATE_CHECK
              value: "true"
            # Outpost configuration - Force connection to external outpost
            - name: AUTHENTIK_OUTPOST_ID
              value: "3f0970c5-d6a3-43b2-9a36-d74665c6b24e"
            # Network configuration
            - name: AUTHENTIK_LISTEN__HTTP
              value: "0.0.0.0:9000"
            - name: AUTHENTIK_LISTEN__HTTPS
              value: "0.0.0.0:9443"
            - name: AUTHENTIK_LISTEN__METRICS
              value: "0.0.0.0:9300"
            # Session storage configuration (use Redis service)
            - name: AUTHENTIK_REDIS__HOST
              value: "redis.authentik-proxy.svc.cluster.local"
            - name: AUTHENTIK_REDIS__PORT
              value: "6379"
            - name: AUTHENTIK_REDIS__DB
              value: "0"
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: https
              containerPort: 9443
              protocol: TCP
            - name: metrics
              containerPort: 9300
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /outpost.goauthentik.io/ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /outpost.goauthentik.io/ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /outpost.goauthentik.io/ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: config
          configMap:
            name: authentik-proxy-config
            defaultMode: 0644
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: var-run
          emptyDir:
            sizeLimit: 100Mi
      # Node scheduling
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: authentik-proxy
                    app.kubernetes.io/component: external-outpost
                topologyKey: kubernetes.io/hostname
