apiVersion: v1
kind: ConfigMap
metadata:
  name: authentik-proxy-config
  namespace: authentik-proxy
  labels:
    app.kubernetes.io/name: authentik-proxy
    app.kubernetes.io/part-of: identity-provider
    app.kubernetes.io/component: external-outpost
data:
  # Service routing configuration
  services.yaml: |
    services:
      longhorn:
        host: "longhorn.k8s.home.geoffdavis.com"
        backend: "http://longhorn-frontend.longhorn-system.svc.cluster.local:80"
        description: "Longhorn Storage Management"
      alertmanager:
        host: "alertmanager.k8s.home.geoffdavis.com"
        backend: "http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093"
        description: "AlertManager Alert Routing"
      hubble:
        host: "hubble.k8s.home.geoffdavis.com"
        backend: "http://hubble-ui.kube-system.svc.cluster.local:80"
        description: "Hubble Network Observability"
      homeassistant:
        host: "homeassistant.k8s.home.geoffdavis.com"
        backend: "http://home-assistant.home-automation.svc.cluster.local:8123"
        description: "Home Assistant Home Automation Platform"

  # Authentik configuration
  authentik.yaml: |
    authentik:
      server: "https://authentik.k8s.home.geoffdavis.com"
      api_endpoint: "https://authentik.k8s.home.geoffdavis.com/api/v3/"
      outpost_type: "proxy"

  # Nginx configuration template
  nginx.conf: |
    upstream authentik {
        server authentik.k8s.home.geoffdavis.com:443;
    }

    # Health check endpoint
    server {
        listen 8080;
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
