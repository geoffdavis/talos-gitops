apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: external-dns-internal
  namespace: external-dns-internal-system
spec:
  interval: 30m
  timeout: 10m
  install:
    timeout: 10m
    remediation:
      retries: 3
  upgrade:
    timeout: 10m
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 5m
    cleanupOnFail: true
  chart:
    spec:
      chart: external-dns
      version: "1.14.5"
      sourceRef:
        kind: HelmRepository
        name: external-dns
        namespace: flux-system
      interval: 12h
  values:
    # Configure webhook provider for UniFi following official documentation
    provider:
      name: webhook
      webhook:
        image:
          repository: ghcr.io/kashalls/external-dns-unifi-webhook
          tag: v0.6.0
        env:
          - name: UNIFI_HOST
            value: "https://172.29.51.1"
          - name: UNIFI_EXTERNAL_CONTROLLER
            value: "false"
          - name: UNIFI_API_KEY
            valueFrom:
              secretKeyRef:
                name: external-dns-unifi-secret
                key: api-key
          - name: LOG_LEVEL
            value: "info"
          - name: SERVER_HOST
            value: "0.0.0.0"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5

    # Domain configuration - only manage internal domains
    domainFilters:
      - k8s.home.geoffdavis.com

    # Zone ID filters (optional)
    zoneIdFilters: []

    # Policy configuration
    policy: sync

    # Registry configuration
    registry: txt
    txtOwnerId: "home-ops-internal"
    txtPrefix: "external-dns-internal-"

    # Deployment configuration
    replicas: 1

    # Resource limits
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 25Mi

    # Node selector and tolerations
    nodeSelector:
      kubernetes.io/os: linux

    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule

    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      runAsGroup: 65534
      fsGroup: 65534

    # Pod security context
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65534
      runAsGroup: 65534
      fsGroup: 65534

    # Service configuration
    service:
      enabled: true
      type: ClusterIP

    # ServiceAccount configuration
    serviceAccount:
      create: true
      name: external-dns-internal

    # RBAC configuration
    rbac:
      create: true

    # Metrics configuration
    metrics:
      enabled: true
      port: 7979

    # Logging configuration
    logLevel: info
    logFormat: text

    # Interval configuration
    interval: 1m

    # Source configuration
    sources:
      - service
      - ingress
      - crd

    # Annotation filters - process all ingresses (domain filtering handles scope)
    # annotationFilter: ""  # Process all ingresses matching domainFilters

    # Extra arguments
    extraArgs:
      - --crd-source-apiversion=externaldns.k8s.io/v1alpha1
      - --crd-source-kind=DNSEndpoint

    # Environment variables to fix IPv6 localhost resolution
    env:
      - name: GODEBUG
        value: "netdns=go+2"

    # Probes configuration
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 2
      successThreshold: 1

    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

    # Pod disruption budget
    podDisruptionBudget:
      enabled: true
      minAvailable: 1

    # Priority class
    priorityClassName: ""

    # Pod annotations
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "7979"
      prometheus.io/path: "/metrics"

    # Deployment annotations
    deploymentAnnotations:
      reloader.stakater.com/auto: "true"

    # Pod labels
    podLabels:
      app.kubernetes.io/component: dns-controller-internal

    # Configure dry-run mode (set to false for production)
    dryRun: false

    # Configure trigger loop on events
    triggerLoopOnEvent: false

    # Configure batch change size
    batchChangeSize: 1000

    # Configure batch change interval
    batchChangeInterval: 1s
