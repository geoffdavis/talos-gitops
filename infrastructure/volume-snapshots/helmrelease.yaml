apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: snapshot-controller
  namespace: volume-snapshot-system
spec:
  interval: 30m
  timeout: 15m
  install:
    timeout: 15m
    remediation:
      retries: 3
  upgrade:
    timeout: 15m
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    cleanupOnFail: true
  chart:
    spec:
      chart: snapshot-controller
      version: "4.1.1"
      sourceRef:
        kind: HelmRepository
        name: piraeus
        namespace: flux-system
      interval: 12h
  values:
    # Controller configuration
    controller:
      # Resource limits and requests
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 32Mi

      # Node selector and tolerations for control plane scheduling
      nodeSelector:
        kubernetes.io/os: linux

      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule

      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault

      # Pod security context
      podSecurityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

      # Enable metrics
      metrics:
        enabled: true

      # Log level
      logLevel: 2

      # Leader election
      leaderElection:
        enabled: true

    # Webhook configuration
    webhook:
      # Resource limits and requests
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 32Mi

      # Node selector and tolerations
      nodeSelector:
        kubernetes.io/os: linux

      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule

      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault

    # RBAC configuration
    rbac:
      create: true

    # Service account configuration
    serviceAccount:
      create: true

    # Install CRDs
    installCRDs: true

    # Pod disruption budget
    podDisruptionBudget:
      enabled: true
      minAvailable: 1

    # Image configuration
    image:
      pullPolicy: IfNotPresent

    # Configure for homelab use
    global:
      leaderElection:
        namespace: volume-snapshot-system
