apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgresql-cluster-metrics
  namespace: postgresql-system
  labels:
    app.kubernetes.io/name: postgresql-cluster
    app.kubernetes.io/component: database
    monitoring: "enabled"
spec:
  # Target selector for PostgreSQL cluster pods
  selector:
    matchLabels:
      postgresql: postgresql-cluster
      cnpg.io/cluster: postgresql-cluster

  # Endpoints configuration
  endpoints:
    - port: metrics
      interval: 30s
      scrapeTimeout: 10s
      path: /metrics
      scheme: http
      honorLabels: true
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: "cnpg_.*"
          targetLabel: __name__
          replacement: "${1}"
        - sourceLabels: [__meta_kubernetes_pod_name]
          targetLabel: instance
          replacement: "${1}"
        - sourceLabels: [__meta_kubernetes_namespace]
          targetLabel: namespace
          replacement: "${1}"
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_label_postgresql]
          targetLabel: cluster
          replacement: "${1}"
        - sourceLabels: [__meta_kubernetes_pod_label_cnpg_io_instanceRole]
          targetLabel: role
          replacement: "${1}"
        - sourceLabels: [__meta_kubernetes_pod_name]
          targetLabel: pod
          replacement: "${1}"

  # Namespace selector
  namespaceSelector:
    matchNames:
      - postgresql-system
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgresql-cluster-pgbouncer-metrics
  namespace: postgresql-system
  labels:
    app.kubernetes.io/name: postgresql-cluster
    app.kubernetes.io/component: connection-pooler
    monitoring: "enabled"
spec:
  # Target selector for PgBouncer pods
  selector:
    matchLabels:
      cnpg.io/cluster: postgresql-cluster
      cnpg.io/poolerName: postgresql-cluster-pooler

  # Endpoints configuration for PgBouncer
  endpoints:
    - port: metrics
      interval: 30s
      scrapeTimeout: 10s
      path: /metrics
      scheme: http
      honorLabels: true
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: "pgbouncer_.*"
          targetLabel: __name__
          replacement: "${1}"
        - sourceLabels: [__meta_kubernetes_pod_name]
          targetLabel: instance
          replacement: "${1}"
        - sourceLabels: [__meta_kubernetes_namespace]
          targetLabel: namespace
          replacement: "${1}"
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_label_cnpg_io_cluster]
          targetLabel: cluster
          replacement: "${1}"
        - sourceLabels: [__meta_kubernetes_pod_name]
          targetLabel: pod
          replacement: "${1}"
        - targetLabel: component
          replacement: "pgbouncer"

  # Namespace selector
  namespaceSelector:
    matchNames:
      - postgresql-system
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: postgresql-cluster-alerts
  namespace: postgresql-system
  labels:
    app.kubernetes.io/name: postgresql-cluster
    app.kubernetes.io/component: database
    monitoring: "enabled"
spec:
  groups:
    - name: postgresql-cluster.rules
      interval: 30s
      rules:
        - alert: PostgreSQLClusterDown
          expr: cnpg_cluster_status{cluster="postgresql-cluster"} == 0
          for: 5m
          labels:
            severity: critical
            service: postgresql
          annotations:
            summary: "PostgreSQL cluster {{ $labels.cluster }} is down"
            description: "PostgreSQL cluster {{ $labels.cluster }} has been down for more than 5 minutes."

        - alert: PostgreSQLHighConnections
          expr: cnpg_backends_total{cluster="postgresql-cluster"} / cnpg_backends_max{cluster="postgresql-cluster"} > 0.8
          for: 5m
          labels:
            severity: warning
            service: postgresql
          annotations:
            summary: "PostgreSQL cluster {{ $labels.cluster }} has high connection usage"
            description: "PostgreSQL cluster {{ $labels.cluster }} is using {{ $value | humanizePercentage }} of available connections."

        - alert: PostgreSQLReplicationLag
          expr: cnpg_pg_replication_lag{cluster="postgresql-cluster"} > 300
          for: 5m
          labels:
            severity: warning
            service: postgresql
          annotations:
            summary: "PostgreSQL replica lag is high"
            description: "PostgreSQL replica {{ $labels.instance }} is lagging behind primary by {{ $value }} seconds."

        - alert: PostgreSQLBackupFailed
          expr: increase(cnpg_backup_failed_total{cluster="postgresql-cluster"}[1h]) > 0
          for: 0m
          labels:
            severity: critical
            service: postgresql
          annotations:
            summary: "PostgreSQL backup failed"
            description: "PostgreSQL cluster {{ $labels.cluster }} backup has failed."

        - alert: PostgreSQLDiskSpaceHigh
          expr: cnpg_pg_database_size_bytes{cluster="postgresql-cluster"} / cnpg_pg_settings_max_wal_size_bytes{cluster="postgresql-cluster"} > 0.8
          for: 10m
          labels:
            severity: warning
            service: postgresql
          annotations:
            summary: "PostgreSQL disk space usage is high"
            description: "PostgreSQL cluster {{ $labels.cluster }} disk usage is above 80%."
