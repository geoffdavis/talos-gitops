apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: "4.10.1"
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      interval: 12h
  values:
    controller:
      # Use LoadBalancer service type with Cilium
      service:
        type: LoadBalancer
        loadBalancerIP: "172.29.51.200"
        annotations:
          io.cilium/lb-ipam-pool: "ingress"
          external-dns.alpha.kubernetes.io/hostname: "*.homelab.local"
          external-dns.alpha.kubernetes.io/target: "172.29.51.200"
        externalTrafficPolicy: Local
        
      # Enable metrics
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: ingress-nginx
        prometheusRule:
          enabled: false  # Disabled until monitoring stack is ready
          namespace: ingress-nginx
          
      # Configure for homelab use
      config:
        use-forwarded-headers: "true"
        compute-full-forwarded-for: "true"
        use-proxy-protocol: "false"
        proxy-body-size: "50m"
        proxy-buffer-size: "16k"
        proxy-buffers-number: "8"
        client-header-buffer-size: "64k"
        client-body-buffer-size: "128k"
        large-client-header-buffers: "4 64k"
        ssl-protocols: "TLSv1.2 TLSv1.3"
        ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
        ssl-prefer-server-ciphers: "true"
        ssl-session-cache: "shared:SSL:10m"
        ssl-session-timeout: "10m"
        enable-brotli: "true"
        brotli-level: "6"
        brotli-types: "application/xml+rss application/atom+xml image/svg+xml application/javascript application/x-javascript text/javascript text/css"
        
      # Enable geoip2 for location-based routing
      geoip2:
        enabled: false  # Disabled for homelab
        
      # Resource limits
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 128Mi
          
      # Autoscaling
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 5
        targetCPUUtilizationPercentage: 70
        targetMemoryUtilizationPercentage: 80
        
      # Pod disruption budget
      podDisruptionBudget:
        enabled: true
        minAvailable: 1
        
      # Node affinity for control plane scheduling
      nodeSelector:
        kubernetes.io/os: linux
        
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
          
      # Enable admission webhooks
      admissionWebhooks:
        enabled: true
        patch:
          enabled: true
          
      # Ingress class configuration
      ingressClassResource:
        name: nginx
        enabled: true
        default: true
        controllerValue: "k8s.io/ingress-nginx"
        
      # Enable real IP preservation
      enableRealIp: true
      
      # Configure logging
      logLevel: 2
      
      # Configure health checks
      healthCheckPath: /healthz
      
      # Configure default backend
      defaultBackend:
        enabled: true
        image:
          repository: registry.k8s.io/defaultbackend-amd64
          tag: "1.5"
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
            
    # Configure default backend separately
    defaultBackend:
      enabled: true
      image:
        repository: registry.k8s.io/defaultbackend-amd64
        tag: "1.5"
      resources:
        limits:
          cpu: 10m
          memory: 20Mi
        requests:
          cpu: 10m
          memory: 20Mi
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
          
    # Configure RBAC
    rbac:
      create: true
      
    # Configure service account
    serviceAccount:
      create: true
      name: ingress-nginx
      
    # Configure pod security context
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 101
      runAsGroup: 82
      fsGroup: 82
      
    # Configure security context
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 101
      runAsGroup: 82