---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cnpg-health-check
  namespace: cnpg-monitoring
  labels:
    app.kubernetes.io/name: cnpg-health-check
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: cnpg-barman-plugin
  annotations:
    description: "Automated health checks for CNPG Barman Plugin system"
spec:
  # Run health checks every 15 minutes
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: cnpg-health-check
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/part-of: cnpg-barman-plugin
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 900 # 15 minutes timeout
      template:
        metadata:
          labels:
            app.kubernetes.io/name: cnpg-health-check
            app.kubernetes.io/component: monitoring
            app.kubernetes.io/part-of: cnpg-barman-plugin
        spec:
          serviceAccountName: cnpg-monitoring
          restartPolicy: Never
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          containers:
            - name: health-check
              image: ghcr.io/cloudnative-pg/cloudnative-pg:1.26.1
              imagePullPolicy: IfNotPresent
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
              command:
                - /bin/bash
                - -c
                - |
                  set -euo pipefail

                  # Source the health check script from ConfigMap
                  source /scripts/health-check.sh

                  # Set environment variables
                  export PUSHGATEWAY_URL="http://prometheus-pushgateway.monitoring.svc.cluster.local:9091"
                  export NAMESPACES="home-automation,postgresql-system,cnpg-system"
                  export ENABLE_PUSHGATEWAY="true"
                  export LOG_LEVEL="INFO"

                  # Run health checks
                  echo "Starting CNPG Barman Plugin health checks..."
                  main
              volumeMounts:
                - name: scripts
                  mountPath: /scripts
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
                - name: kubectl-cache
                  mountPath: /.kube
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              env:
                - name: KUBECONFIG
                  value: "" # Use in-cluster config
                - name: HOME
                  value: /tmp
          volumes:
            - name: scripts
              configMap:
                name: cnpg-health-check-config
                defaultMode: 0755
            - name: tmp
              emptyDir: {}
            - name: kubectl-cache
              emptyDir: {}
---
# Weekly backup restoration test
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cnpg-backup-restore-test
  namespace: cnpg-monitoring
  labels:
    app.kubernetes.io/name: cnpg-backup-restore-test
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: cnpg-barman-plugin
  annotations:
    description: "Weekly backup restoration testing for CNPG Barman Plugin system"
spec:
  # Run every Sunday at 2 AM
  schedule: "0 2 * * 0"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: cnpg-backup-restore-test
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/part-of: cnpg-barman-plugin
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 3600 # 1 hour timeout
      template:
        metadata:
          labels:
            app.kubernetes.io/name: cnpg-backup-restore-test
            app.kubernetes.io/component: monitoring
            app.kubernetes.io/part-of: cnpg-barman-plugin
        spec:
          serviceAccountName: cnpg-monitoring
          restartPolicy: Never
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          containers:
            - name: backup-restore-test
              image: ghcr.io/cloudnative-pg/cloudnative-pg:1.26.1
              imagePullPolicy: IfNotPresent
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
              command:
                - /bin/bash
                - -c
                - |
                  set -euo pipefail

                  # Source the backup restore test script from ConfigMap
                  source /scripts/backup-restore-test.sh

                  # Set environment variables
                  export PUSHGATEWAY_URL="http://prometheus-pushgateway.monitoring.svc.cluster.local:9091"
                  export TEST_NAMESPACE="cnpg-test"
                  export ENABLE_PUSHGATEWAY="true"
                  export LOG_LEVEL="INFO"
                  export TEST_MODE="automated"

                  # Run backup restoration tests
                  echo "Starting CNPG Barman Plugin backup restoration tests..."
                  main
              volumeMounts:
                - name: scripts
                  mountPath: /scripts
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
                - name: kubectl-cache
                  mountPath: /.kube
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 1000m
                  memory: 512Mi
              env:
                - name: KUBECONFIG
                  value: "" # Use in-cluster config
                - name: HOME
                  value: /tmp
          volumes:
            - name: scripts
              configMap:
                name: cnpg-health-check-config
                defaultMode: 0755
            - name: tmp
              emptyDir: {}
            - name: kubectl-cache
              emptyDir: {}
---
# Monthly performance monitoring and analysis
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cnpg-performance-monitor
  namespace: cnpg-monitoring
  labels:
    app.kubernetes.io/name: cnpg-performance-monitor
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: cnpg-barman-plugin
  annotations:
    description: "Monthly performance monitoring and analysis for CNPG Barman Plugin system"
spec:
  # Run on the 1st of every month at 3 AM
  schedule: "0 3 1 * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: cnpg-performance-monitor
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/part-of: cnpg-barman-plugin
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 1800 # 30 minutes timeout
      template:
        metadata:
          labels:
            app.kubernetes.io/name: cnpg-performance-monitor
            app.kubernetes.io/component: monitoring
            app.kubernetes.io/part-of: cnpg-barman-plugin
        spec:
          serviceAccountName: cnpg-monitoring
          restartPolicy: Never
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          containers:
            - name: performance-monitor
              image: ghcr.io/cloudnative-pg/cloudnative-pg:1.26.1
              imagePullPolicy: IfNotPresent
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
              command:
                - /bin/bash
                - -c
                - |
                  set -euo pipefail

                  # Source the performance monitor script from ConfigMap
                  source /scripts/performance-monitor.sh

                  # Set environment variables
                  export PUSHGATEWAY_URL="http://prometheus-pushgateway.monitoring.svc.cluster.local:9091"
                  export PROMETHEUS_URL="http://prometheus-operated.monitoring.svc.cluster.local:9090"
                  export ENABLE_PUSHGATEWAY="true"
                  export LOG_LEVEL="INFO"
                  export ANALYSIS_PERIOD="30d"

                  # Run performance monitoring
                  echo "Starting CNPG Barman Plugin performance monitoring..."
                  main
              volumeMounts:
                - name: scripts
                  mountPath: /scripts
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
                - name: kubectl-cache
                  mountPath: /.kube
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              env:
                - name: KUBECONFIG
                  value: "" # Use in-cluster config
                - name: HOME
                  value: /tmp
          volumes:
            - name: scripts
              configMap:
                name: cnpg-health-check-config
                defaultMode: 0755
            - name: tmp
              emptyDir: {}
            - name: kubectl-cache
              emptyDir: {}
