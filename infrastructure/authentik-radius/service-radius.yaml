apiVersion: v1
kind: Service
metadata:
  name: authentik-radius
  namespace: authentik
  labels:
    app.kubernetes.io/name: authentik
    app.kubernetes.io/component: radius
    io.cilium/lb-ipam-pool: "default"
  annotations:
    # Cilium LoadBalancer configuration
    io.cilium/lb-ipam-pool: "default"
    # External DNS configuration
    external-dns.alpha.kubernetes.io/hostname: "radius.k8s.home.geoffdavis.com"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ipFamilyPolicy: SingleStack
  ipFamilies:
    - IPv4
  ports:
    # RADIUS Authentication
    - name: radius-auth
      port: 1812
      targetPort: 1812
      protocol: UDP
    # RADIUS Accounting
    - name: radius-acct
      port: 1813
      targetPort: 1813
      protocol: UDP
  selector:
    app.kubernetes.io/name: authentik-radius
    app.kubernetes.io/component: radius
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-radius
  namespace: authentik
  labels:
    app.kubernetes.io/name: authentik-radius
    app.kubernetes.io/component: radius
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: authentik-radius
      app.kubernetes.io/component: radius
  template:
    metadata:
      labels:
        app.kubernetes.io/name: authentik-radius
        app.kubernetes.io/component: radius
      annotations:
        reloader.stakater.com/auto: "true"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: wait-for-authentik
          image: curlimages/curl:8.5.0
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          command:
            - sh
            - -c
            - |
              echo "Waiting for Authentik server to be ready..."
              until curl -f -s http://authentik-server.authentik.svc.cluster.local/if/flow/default-authentication-flow/ > /dev/null 2>&1; do
                echo "Authentik server not ready yet, waiting 10 seconds..."
                sleep 10
              done
              echo "Authentik server is ready!"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      containers:
        - name: radius
          image: ghcr.io/goauthentik/radius:2024.8.3
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: AUTHENTIK_HOST
              value: "http://authentik-server.authentik.svc.cluster.local"
            - name: AUTHENTIK_INSECURE
              value: "true"
            - name: AUTHENTIK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: authentik-radius-token
                  key: token
          envFrom:
            - configMapRef:
                name: authentik-radius-config
            - secretRef:
                name: authentik-config
          ports:
            - name: radius-auth
              containerPort: 1812
              protocol: UDP
            - name: radius-acct
              containerPort: 1813
              protocol: UDP
            - name: metrics
              containerPort: 9300
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /outpost.goauthentik.io/ping
              port: 9300
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /outpost.goauthentik.io/ping
              port: 9300
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /outpost.goauthentik.io/ping
              port: 9300
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 30
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: authentik-radius
                    app.kubernetes.io/component: radius
                topologyKey: kubernetes.io/hostname