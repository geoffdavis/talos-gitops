---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik-radius-token
  namespace: authentik
  labels:
    app.kubernetes.io/name: authentik
    app.kubernetes.io/component: token-management
    app.kubernetes.io/part-of: authentik
  annotations:
    external-secrets.io/refresh-interval: "5m"
    token-management.authentik.io/rotation-enabled: "true"
    token-management.authentik.io/overlap-days: "30"
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: onepassword-connect
    kind: ClusterSecretStore
  target:
    name: authentik-radius-token
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: authentik
          app.kubernetes.io/component: token-management
          app.kubernetes.io/part-of: authentik
        annotations:
          token-management.authentik.io/last-rotation: "never"
          token-management.authentik.io/expires: "unknown"
          token-management.authentik.io/created: "unknown"
          token-management.authentik.io/description: "Authentik RADIUS API Token"
          token-management.authentik.io/rotation-status: "active"
      data:
        # RADIUS API token (trimmed to remove newlines/whitespace)  # pragma: allowlist secret
        token: "{{ .token | trim }}" # pragma: allowlist secret

        # Token validation endpoint for health checks
        validation_endpoint: "http://authentik-server.authentik.svc.cluster.local/api/v3/core/users/me/"
  data:
    - secretKey: token # pragma: allowlist secret
      remoteRef:
        key: "Authentik Outpost RADIUS Token - home-ops" # pragma: allowlist secret
        property: "token" # pragma: allowlist secret
