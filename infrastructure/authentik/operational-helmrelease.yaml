---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik-operational
  namespace: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: "2025.6.4"
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
      interval: 12h
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: authentik-bootstrap
      namespace: authentik
  values:
    global:
      deploymentAnnotations:
        reloader.stakater.com/auto: "true"

    authentik:
      log_level: info
      error_reporting:
        enabled: false
      postgresql:
        host: "postgresql-cluster-rw.postgresql-system.svc.cluster.local"
        name: "authentik"
        user: "authentik"
        port: 5432
      redis:
        host: "authentik-redis-master.authentik.svc.cluster.local"
        port: 6379
        db: 0

    server:
      name: server
      replicas: 2

      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 5
        targetCPUUtilizationPercentage: 50

      resources:
        server:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi

      metrics:
        serviceMonitor:
          enabled: true
          interval: 30s
          scrapeTimeout: 3s

      ingress:
        enabled: true
        ingressClassName: nginx-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.home-ops.dev"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - auth.home-ops.dev
        tls:
          - secretName: authentik-tls
            hosts:
              - auth.home-ops.dev

      envFrom:
        - secretRef:
            name: authentik-config
        - secretRef:
            name: authentik-database-credentials
        - secretRef:
            name: authentik-admin-api-token # Now includes admin API token

      env:
        # Core configuration
        - name: AUTHENTIK_DISABLE_UPDATE_CHECK
          value: "true"
        - name: AUTHENTIK_ERROR_REPORTING__ENABLED
          value: "false"
        - name: AUTHENTIK_LOG_LEVEL
          value: "info"

    worker:
      name: worker
      replicas: 2

      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 5
        targetCPUUtilizationPercentage: 80

      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 1Gi

      envFrom:
        - secretRef:
            name: authentik-config
        - secretRef:
            name: authentik-database-credentials
        - secretRef:
            name: authentik-admin-api-token # Now includes admin API token

      env:
        # Core configuration
        - name: AUTHENTIK_DISABLE_UPDATE_CHECK
          value: "true"
        - name: AUTHENTIK_ERROR_REPORTING__ENABLED
          value: "false"
        - name: AUTHENTIK_LOG_LEVEL
          value: "info"

    redis:
      enabled: true
      auth:
        enabled: false
      master:
        persistence:
          enabled: true
          size: 1Gi
          storageClass: longhorn-ssd
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi

    postgresql:
      enabled: false

    prometheusRule:
      enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      scrapeTimeout: 3s
