apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: authentik-internal
  namespace: authentik
  labels:
    app.kubernetes.io/name: authentik
    app.kubernetes.io/component: identity-provider
  annotations:
    # Use internal nginx controller
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Security headers (using server-snippet instead of configuration-snippet)
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # SSL configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    
    # External DNS
    external-dns.alpha.kubernetes.io/hostname: "authentik.k8s.home.geoffdavis.com"
    external-dns.alpha.kubernetes.io/target: "172.29.51.200"
spec:
  ingressClassName: nginx-internal
  tls:
    - hosts:
        - authentik.k8s.home.geoffdavis.com
      secretName: authentik-tls-certificate
  rules:
    - host: authentik.k8s.home.geoffdavis.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: authentik-server
                port:
                  number: 80