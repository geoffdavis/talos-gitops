---
apiVersion: batch/v1
kind: Job
metadata:
  name: authentik-admin-user-setup
  namespace: authentik
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-weight: "5"
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: authentik-admin-setup
        app.kubernetes.io/component: configuration
    spec:
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: wait-for-authentik
          image: curlimages/curl:8.15.0
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for Authentik server to be ready..."
              until curl -f -s http://authentik-server.authentik.svc.cluster.local/if/flow/initial-setup/ > /dev/null 2>&1; do
                echo "Authentik not ready yet, waiting 10 seconds..."
                sleep 10
              done
              echo "Authentik server is ready!"
      containers:
        - name: create-admin-user
          image: ghcr.io/goauthentik/server:2025.6.4
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AUTHENTIK_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: authentik-admin-credentials
                  key: username
            - name: AUTHENTIK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: authentik-admin-credentials
                  key: password
            - name: AUTHENTIK_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: authentik-admin-credentials
                  key: email
          envFrom:
            - secretRef:
                name: authentik-config
            - secretRef:
                name: authentik
            - secretRef:
                name: authentik-database-credentials
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Creating Authentik admin user..."

              # Use the ak management command to create admin user
              ak shell -c "
              from authentik.core.models import User
              import os

              username = os.environ.get('AUTHENTIK_ADMIN_USERNAME', 'admin')
              password = os.environ.get('AUTHENTIK_ADMIN_PASSWORD')
              email = os.environ.get('AUTHENTIK_ADMIN_EMAIL', 'admin@k8s.home.geoffdavis.com')

              if not password:
                  print('ERROR: AUTHENTIK_ADMIN_PASSWORD not set')
                  exit(1)

              user, created = User.objects.get_or_create(
                  username=username,
                  defaults={
                      'name': 'Administrator',
                      'email': email,
                      'is_superuser': True,
                      'is_active': True
                  }
              )

              if not created:
                  # Update existing user
                  user.name = 'Administrator'
                  user.email = email
                  user.is_superuser = True
                  user.is_active = True

              user.set_password(password)
              user.save()

              if created:
                  print(f'Created admin user: {username}')
              else:
                  print(f'Updated existing admin user: {username}')

              print(f'Username: {username}')
              print(f'Email: {email}')
              print('Password: [REDACTED]')
              print('URL: https://authentik.k8s.home.geoffdavis.com')
              "

              echo "Admin user setup completed!"
